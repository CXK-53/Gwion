// coverage for 'float'. (generated by util/test2.sh)

float a;

//testing operator for float and float
{
	float	variable1;
	float	variable2;
	<<< variable1=variable2 >>>;
}

//testing operator for float and float
{
	float	variable1;
	float	variable2;
	<<< variable1+variable2 >>>;
}

//testing operator for float and float
{
	float	variable1;
	float	variable2;
	<<< variable1-variable2 >>>;
}

//testing operator for float and float
{
	float	variable1;
	float	variable2;
	<<< variable1*variable2 >>>;
}

//testing operator for float and float
{
	float	variable1;
	float	variable2;
	<<< variable1/variable2 >>>;
}

//testing operator for float and float
{
	float	variable1;
	float	variable2;
	<<< variable1&&variable2 >>>;
}

//testing operator for float and float
{
	float	variable1;
	float	variable2;
	<<< variable1||variable2 >>>;
}

//testing operator for float and float
{
	float	variable1;
	float	variable2;
	<<< variable1==variable2 >>>;
}

//testing operator for float and float
{
	float	variable1;
	float	variable2;
	<<< variable1!=variable2 >>>;
}

//testing operator for float and float
{
	float	variable1;
	float	variable2;
	<<< variable1>variable2 >>>;
}

//testing operator for float and float
{
	float	variable1;
	float	variable2;
	<<< variable1>=variable2 >>>;
}

//testing operator for float and float
{
	float	variable1;
	float	variable2;
	<<< variable1<variable2 >>>;
}

//testing operator for float and float
{
	float	variable1;
	float	variable2;
	<<< variable1<=variable2 >>>;
}

//testing operator for  and float
{
	float	variable2;
	<<< -variable2 >>>;
}

//testing operator for  and int
{
	int	variable2;
	<<< !variable2 >>>;
}

//testing operator for float and float
{
	float	variable1;
	float	variable2;
	<<< variable1=>variable2 >>>;
}

//testing operator for float and float
{
	float	variable1;
	float	variable2;
	<<< variable1+=>variable2 >>>;
}

//testing operator for float and float
{
	float	variable1;
	float	variable2;
	<<< variable1-=>variable2 >>>;
}

//testing operator for float and float
{
	float	variable1;
	float	variable2;
	<<< variable1*=>variable2 >>>;
}

//testing operator for float and float
{
	float	variable1;
	float	variable2;
	<<< variable1/=>variable2 >>>;
}

//testing operator for int and float
{
	int	variable1;
	float	variable2;
	<<< variable1=variable2 >>>;
}

//testing operator for int and float
{
	int	variable1;
	float	variable2;
	<<< variable1+variable2 >>>;
}

//testing operator for int and float
{
	int	variable1;
	float	variable2;
	<<< variable1-variable2 >>>;
}

//testing operator for int and float
{
	int	variable1;
	float	variable2;
	<<< variable1*variable2 >>>;
}

//testing operator for int and float
{
	int	variable1;
	float	variable2;
	<<< variable1/variable2 >>>;
}

//testing operator for int and float
{
	int	variable1;
	float	variable2;
	<<< variable1&&variable2 >>>;
}

//testing operator for int and float
{
	int	variable1;
	float	variable2;
	<<< variable1||variable2 >>>;
}

//testing operator for int and float
{
	int	variable1;
	float	variable2;
	<<< variable1==variable2 >>>;
}

//testing operator for int and float
{
	int	variable1;
	float	variable2;
	<<< variable1!=variable2 >>>;
}

//testing operator for int and float
{
	int	variable1;
	float	variable2;
	<<< variable1>variable2 >>>;
}

//testing operator for int and float
{
	int	variable1;
	float	variable2;
	<<< variable1>=variable2 >>>;
}

//testing operator for int and float
{
	int	variable1;
	float	variable2;
	<<< variable1<variable2 >>>;
}

//testing operator for int and float
{
	int	variable1;
	float	variable2;
	<<< variable1<=variable2 >>>;
}

//testing operator for int and float
{
	int	variable1;
	float	variable2;
	<<< variable1=>variable2 >>>;
}

//testing operator for int and float
{
	int	variable1;
	float	variable2;
	<<< variable1+=>variable2 >>>;
}

//testing operator for int and float
{
	int	variable1;
	float	variable2;
	<<< variable1-=>variable2 >>>;
}

//testing operator for int and float
{
	int	variable1;
	float	variable2;
	<<< variable1*=>variable2 >>>;
}

//testing operator for int and float
{
	int	variable1;
	float	variable2;
	<<< variable1/=>variable2 >>>;
}

//testing operator for float and int
{
	float	variable1;
	int	variable2;
	<<< variable1+variable2 >>>;
}

//testing operator for float and int
{
	float	variable1;
	int	variable2;
	<<< variable1-variable2 >>>;
}

//testing operator for float and int
{
	float	variable1;
	int	variable2;
	<<< variable1*variable2 >>>;
}

//testing operator for float and int
{
	float	variable1;
	int	variable2;
	<<< variable1/variable2 >>>;
}

//testing operator for float and int
{
	float	variable1;
	int	variable2;
	<<< variable1&&variable2 >>>;
}

//testing operator for float and int
{
	float	variable1;
	int	variable2;
	<<< variable1||variable2 >>>;
}

//testing operator for float and int
{
	float	variable1;
	int	variable2;
	<<< variable1==variable2 >>>;
}

//testing operator for float and int
{
	float	variable1;
	int	variable2;
	<<< variable1!=variable2 >>>;
}

//testing operator for float and int
{
	float	variable1;
	int	variable2;
	<<< variable1>variable2 >>>;
}

//testing operator for float and int
{
	float	variable1;
	int	variable2;
	<<< variable1>=variable2 >>>;
}

//testing operator for float and int
{
	float	variable1;
	int	variable2;
	<<< variable1<variable2 >>>;
}

//testing operator for float and int
{
	float	variable1;
	int	variable2;
	<<< variable1<=variable2 >>>;
}

