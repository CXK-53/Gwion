name: CI

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
      name: Checkout
    - uses: actions/setup-haskell@v1
      name: Setup Haskell
    - uses: actions/setup-python@v1
      name: Setup Python
    - uses: actions/setup-ruby@v1
      name: Setup Ruby

    - uses: actions/cache@v1
      name: Mdr [ cache ]
      id: mdr-bin
      with:
        path: mdr
        key: ${{ runner.os }}-mdr

    - uses: actions/cache@v1
      name: Results [ cache ]
      id: results
      with:
        path: benchmark/results
        key: ${{ runner.os }}-results

    - name: Mdr
      if: steps.mdr-bin.outputs.cache-hit != 'true'
      run: |
        git clone https://github.com/fennecdjay/mdr
        cd mdr
        cabal update
        cabal install --only-dependencies
        cabal configure
        cabal build
        cabal install

    - name: Mdr
      if: steps.mdr-bin.outputs.cache-hit == 'true'
      run: |
        cd mdr
        cabal update
        cabal install --only-dependencies
        if [ $(git rev-parse HEAD) != $(git ls-remote https://github.com/fennecdjay/mdr.git HEAD | cut -f1) ]
        then
          git pull
          cabal configure
          cabal build
        fi
        cabal install

    - uses: actions/cache@v1
      name: Gwion [ cache ]
      id: gwion-bin
      with:
        path: Gwion
        key: ${{ runner.os }}-gwion

    - name: Gwion [ init ]
      if: steps.gwion-bin.outputs.cache-hit != 'true'
      run: |
        git clone https://github.com/fennecdjay/Gwion
        cd Gwion
        git submodule update --init util ast
        make
        cp gwion ..

    - name: Gwion [ update ]
      if: steps.gwion-bin.outputs.cache-hit == 'true'
      run: |
        cd Gwion
        if [ $(git rev-parse HEAD) != $(git ls-remote https://github.com/fennecdjay/Gwion.git HEAD | cut -f1) ]
        then
          git pull
          git submodule update util ast
          make
        fi
        cp gwion ..

    - uses: actions/cache@v1
      name: Wren [ cache ]
      id: wren
      with:
        path: wren
        key: ${{ runner.os }}-wren

    - name: wren [ init ]
      if: steps.wren.outputs.cache-hit != 'true'
      run: |
        git clone https://github.com/wren-lang/wren
        cd wren
        make

    - name: wren [ update ]
      if: steps.wren.outputs.cache-hit == 'true'
      run: |
        cd wren
        if [ $(git rev-parse HEAD) != $(git ls-remote https://github.com/wren-lang/wren.git HEAD | cut -f1) ]
        then
          git pull
          make
        fi

    - name: Benchmark
      run: |
        git log -1 --pretty="%B" | grep "\[benchmark\]" || exit 0
        echo 1 | sudo tee /proc/sys/kernel/perf_event_paranoid
        sudo apt-get update
        sudo apt-get install gnuplot lua5.3 chuck
        ln -s $(which lua5.3) lua
        export PATH=./wren:$PATH
        export PATH=.:$PATH
        bash scripts/benchmark.sh

    - name: MdBook
      uses: peaceiris/actions-mdbook@v1
      with:
        mdbook-version: 'latest'

    - name: Build book
      run: |
        export PATH=~/.cabal/bin:$PATH
        export PATH=.:$PATH
        make build

     - name: Emojify
       uses: fennecdjay/emojify-docker-action@v1
       with:
         directory: 'md'

    - name: GIT things
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add -f book
        git commit -m "add book"
        git remote set-url origin https://${{ secrets.GWION_TOKEN }}@github.com/fennecdjay/Gwion.git
        git push origin :gh-pages || true
        git subtree push --prefix book origin gh-pages
