name: CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    
    steps:
    - uses: actions/checkout@v1
      name: Checkout
    - uses: actions/setup-python@v1
      name: Setup Python
    - uses: actions/setup-ruby@v1
      name: Setup Ruby

    - uses: actions/cache@v1
      name: Mdr [ cache ]
      id: mdr-bin
      with:
        path: mdr
        key: ${{ runner.os }}-mdr

    - uses: actions/cache@v1
      name: Results [ cache ]
      id: results
      with:
        path: benchmark/results
        key: ${{ runner.os }}-results

    - name: Mdr
      if: steps.mdr-bin.outputs.cache-hit != 'true'
      run: |
        git clone https://github.com/fennecdjay/mdr
        cd mdr
        make

    - name: Mdr
      if: steps.mdr-bin.outputs.cache-hit == 'true'
      run: |
        cd mdr
        git pull
        git checkout master
        make

    - uses: actions/cache@v1
      name: Gwion [ cache ]
      id: gwion-bin
      with:
        path: Gwion
        key: ${{ runner.os }}-gwion

    - name: Gwion
      if: steps.gwion-bin.outputs.cache-hit != 'true'
      uses: fennecdjay/gwion-action@v1

    - name: Gwion [ update ]
      if: steps.gwion-bin.outputs.cache-hit == 'true'
      run: |
        cd Gwion
        if [ $(git rev-parse HEAD) != $(git ls-remote https://github.com/fennecdjay/Gwion.git HEAD | cut -f1) ]
        then
          git pull
          git submodule update util ast
          make
        fi
        cp gwion ..

    - uses: actions/cache@v1
      if: "!contains(github.event.head_commit.message, '[skip benchmark]')"
      name: Wren [ cache ]
      id: wren
      with:
        path: wren
        key: ${{ runner.os }}-wren

    - name: wren [ init ]
      if: "!contains(github.event.head_commit.message, '[skip benchmark]')"
      if: steps.wren.outputs.cache-hit != 'true'
      run: |
        git clone https://github.com/wren-lang/wren
        cd wren/projects/make
        make

    - name: wren [ update ]
      if: "!contains(github.event.head_commit.message, '[skip benchmark]')"
      if: steps.wren.outputs.cache-hit == 'true'
      run: |
        cd wren
        if [ $(git rev-parse HEAD) != $(git ls-remote https://github.com/wren-lang/wren.git HEAD | cut -f1) ]
        then
          git pull
          cd projects/make
          make
        fi

    - name: wren [ install ]
      if: "!contains(github.event.head_commit.message, '[skip benchmark]')"
      run: cp wren/bin/wren_test wren/bin/wren

    - uses: actions/cache@v1
      if: "!contains(github.event.head_commit.message, '[skip benchmark]')"
      name: Lua [ cache ]
      id: lua
      with:
        path: lua
        key: ${{ runner.os }}-lua

    - name: Lua [ init ]
      if: "!contains(github.event.head_commit.message, '[skip benchmark]')"
      if: steps.lua.outputs.cache-hit != 'true'
      run: |
        git clone https://github.com/lua/lua
        cd lua
        sudo apt-get install libreadline-dev
        make

    - name: Lua [ update ]
      if: "!contains(github.event.head_commit.message, '[skip benchmark]')"
      if: steps.lua.outputs.cache-hit == 'true'
      run: |
        cd lua
        if [ $(git rev-parse HEAD) != $(git ls-remote https://github.com/lua/lua.git HEAD | cut -f1) ]
        then
          git pull
          sudo apt-get install libreadline-dev
          make
        fi

    - name: Benchmark
      if: "!contains(github.event.head_commit.message, '[skip benchmark]')"
      run: |
        echo 1 | sudo tee /proc/sys/kernel/perf_event_paranoid
        sudo apt-get update
        sudo apt-get install gnuplot chuck
        echo 'chuck --silent $@' > ./chuck
        chmod +x ./chuck
        export PATH=./wren/bin:$PATH
        export PATH=./lua:$PATH
        export PATH=./mdr:$PATH
        export PATH=./Gwion:$PATH
        export PATH=.:$PATH
        bash scripts/benchmark.sh

    - uses: fennecdjay/emojify-docker-action@v2
      name: Emojify
      with:
         directory: 'docs'

    - name: MdBook
      uses: peaceiris/actions-mdbook@v1
      with:
        mdbook-version: 'latest'

    - name: Build book
      run: |
        export PATH=mdr:$PATH
        export PATH=Gwion:$PATH
        make build

    - name: GIT things
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add -f book
        git commit -m "add book"
        git remote set-url origin https://${{ secrets.GWION_TOKEN }}@github.com/fennecdjay/Gwion.git
        git push origin :gh-pages || true
        git subtree push --prefix book origin gh-pages
