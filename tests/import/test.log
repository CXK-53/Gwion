coverage.gw ==219564== Memcheck, a memory error detector
==219564== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==219564== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==219564== Command: ./../../gwion -p. -m dummy -d dummy coverage.gw
==219564== Parent PID: 219275
==219564== 
==219564== Invalid read of size 8
==219564==    at 0x145464: path_valid (checker.c:67)
==219564==    by 0x145774: ck2list (checker.c:172)
==219564==    by 0x145813: str2decl (checker.c:226)
==219564==    by 0x12CC24: make_exp (union.c:24)
==219564==    by 0x12C78F: gwi_item_ini (item.c:18)
==219564==    by 0x4848958: import (coverage.c:81)
==219564==    by 0x11DB4E: type_engine_init (engine.c:162)
==219564==    by 0x117059: gwion_engine (gwion.c:41)
==219564==    by 0x117059: gwion_ini (gwion.c:84)
==219564==    by 0x116502: main (main.c:23)
==219564==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==219564== 
==219564== 
==219564== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==219564==  Access not within mapped region at address 0x0
==219564==    at 0x145464: path_valid (checker.c:67)
==219564==    by 0x145774: ck2list (checker.c:172)
==219564==    by 0x145813: str2decl (checker.c:226)
==219564==    by 0x12CC24: make_exp (union.c:24)
==219564==    by 0x12C78F: gwi_item_ini (item.c:18)
==219564==    by 0x4848958: import (coverage.c:81)
==219564==    by 0x11DB4E: type_engine_init (engine.c:162)
==219564==    by 0x117059: gwion_engine (gwion.c:41)
==219564==    by 0x117059: gwion_ini (gwion.c:84)
==219564==    by 0x116502: main (main.c:23)
==219564==  If you believe this happened as a result of a stack
==219564==  overflow in your program's main thread (unlikely but
==219564==  possible), you can try to increase the size of the
==219564==  main thread stack using the --main-stacksize= flag.
==219564==  The main thread stack size used in this run was 8388608.
==219564== 
==219564== HEAP SUMMARY:
==219564==     in use at exit: 9,096,690 bytes in 460 blocks
==219564==   total heap usage: 893 allocs, 433 frees, 9,197,246 bytes allocated
==219564== 
==219564== LEAK SUMMARY:
==219564==    definitely lost: 0 bytes in 0 blocks
==219564==    indirectly lost: 0 bytes in 0 blocks
==219564==      possibly lost: 0 bytes in 0 blocks
==219564==    still reachable: 9,096,690 bytes in 460 blocks
==219564==         suppressed: 0 bytes in 0 blocks
==219564== Rerun with --leak-check=full to see details of leaked memory
==219564== 
==219564== For lists of detected and suppressed errors, rerun with: -s
==219564== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
