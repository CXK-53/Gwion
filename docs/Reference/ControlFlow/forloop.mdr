# For Loops
**For** loops in Gwion is pretty similar to classic **C** syntax

## basic loops
@``` forloop0.gw
for(int i; i < 3; ++i)
   <<< i >>>;
@```  
@exec make -s forloop0.test

Of course, it also works with a block of code.

@``` forloop2.gw
for(int i; i < 3; ++i) {
   i/2 => float f1;
   i/2. => float f2;
   <<< i, " " , f1, " ", f2 >>>;
}
@```  
@exec make -s forloop2.test

## Nested Loops
@``` forloop3.gw
int array[3][4];

for(int i; i < 3; ++i) {
  for(int j; j < 4; ++j) {
    <<< array[i][j] >>>;
  }
}
@```  
@exec make -s forloop3.test

### Auto Loops

#### Simple auto loop
@``` forloop4.gw
int array[2][3];
for(auto a: array) {
  <<< a >>>;
  for(auto b: a)
    <<< b >>>;
}
@```  
@exec make -s forloop4.test

### Auto Pointer loop
With the simple auto loop, you only get the value in the array.  
If you want to change it, you need a pointer 

@``` forloop5.gw
int array[2][3];
int i;
for(auto a: array) {
  for(auto @b: a)
    <<< ++i => *b >>>;
}
for(auto a: array) {
  for(auto @b: a)
    <<< *b >>>;
}
@```  
@exec make -s forloop5.test
